// Submits admission applications.
// Makes payments for fees, fines, and other charges.

const mongoose = require("mongoose");
const {
  hashPassword,
  comparePassword,
  generateAccessToken,
  generateRefreshToken,
} = require("../Services/Auth.Services");

const student_Schema = new mongoose.Schema(
  {
    title: { type: String, enum: ["MR", "MR`s"], required: true },
    lastName: { type: String, required: true },
    first_name: { type: String, required: true },
    middle_Name: { type: String, required: true },
    gender: { type: String, required: true },
    mobile: { type: Number, required: true },
    phone: { type: Number },
    password: { type: String, required: true },
    email: {
      type: String,
      required: true,
      unique: true,
      match: /^[^\s@]+@[^\s@]+\.[^\s@]+$/,
    },
    parent_Email: { type: String },
    date_Of_Birth: { type: String },
    place_of_birth: {
      type: String,
      enum: [
        "Andhra Pradesh",
        "Arunachal Pradesh",
        "Assam",
        "Bihar",
        "Chhattisgarh",
        "Goa",
        "Gujarat",
        "Haryana",
        "Himachal Pradesh",
        "Jharkhand",
        "Karnataka",
        "Kerala",
        "Madhya Pradesh",
        "Maharashtra",
        "Manipur",
        "Meghalaya",
        "Mizoram",
        "Nagaland",
        "Odisha",
        "Punjab",
        "Rajasthan",
        "Sikkim",
        "Tamil Nadu",
        "Telangana",
        "Tripura",
        "Uttar Pradesh",
        "Uttarakhand",
        "West Bengal",
        "Andaman and Nicobar Islands",
        "Chandigarh",
        "Dadra and Nagar Haveli and Daman and Diu",
        "Lakshadweep",
        "Delhi",
        "Puducherry",
        "Jammu and Kashmir",
        "Ladakh",
      ],
    },
    marital_Status: { type: String, enum: ["married", "unmarried"] },
    mother_tongue: {
      type: String,
      enum: [
        "Assamese",
        "Bengali",
        "Bodo",
        "Dogri",
        "Gujarati",
        "Hindi",
        "Kannada",
        "Kashmiri",
        "Konkani",
        "Maithili",
        "Malayalam",
        "Manipuri",
        "Marathi",
        "Nepali",
        "Odia",
        "Punjabi",
        "Sanskrit",
        "Santali",
        "Sindhi",
        "Tamil",
        "Telugu",
        "Tulu",
        "Bhili/Bhilodi",
        "Garo",
        "Garhwali",
        "Kumaoni",
        "Marwari",
        "Pahari",
        "Rajasthani",
        "Kodava",
        "Badaga",
        "Angika",
        "Ho",
        "Kurukh",
        "Mundari",
        "Sadri",
        "Ahirani",
        "Kutchi",
        "Ao",
        "Karbi",
        "Khasi",
        "Lotha",
        "Mizo",
        "Tripuri",
      ],
    },
    blood_group: {
      type: String,
      enum: ["A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"],
    },
    occupation: { type: String },
    mother_Name: { type: String },
    mother_mobile_no: { type: Number },
    mother_occupation: { type: String },
    father_Name: { type: String },
    father_mobile_no: { type: Number },
    father_occupation: { type: String },
    nationality: {
      type: String,
      enum: [
        "Afghan",
        "Albanian",
        "Algerian",
        "American",
        "Andorran",
        "Angolan",
        "Argentine",
        "Armenian",
        "Australian",
        "Austrian",
        "Azerbaijani",
        "Bahamian",
        "Bahraini",
        "Bangladeshi",
        "Barbadian",
        "Belarusian",
        "Belgian",
        "Belizean",
        "Beninese",
        "Bhutanese",
        "Bolivian",
        "Bosnian",
        "Botswanan",
        "Brazilian",
        "British",
        "Bruneian",
        "Bulgarian",
        "Burkinabe",
        "Burmese",
        "Burundian",
        "Cambodian",
        "Cameroonian",
        "Canadian",
        "Cape Verdean",
        "Chadian",
        "Chilean",
        "Chinese",
        "Colombian",
        "Comorian",
        "Congolese",
        "Costa Rican",
        "Croatian",
        "Cuban",
        "Cypriot",
        "Czech",
        "Danish",
        "Djiboutian",
        "Dominican",
        "Dutch",
        "Ecuadorian",
        "Egyptian",
        "Emirati",
        "Equatorial Guinean",
        "Eritrean",
        "Estonian",
        "Ethiopian",
        "Fijian",
        "Finnish",
        "French",
        "Gabonese",
        "Gambian",
        "Georgian",
        "German",
        "Ghanaian",
        "Greek",
        "Grenadian",
        "Guatemalan",
        "Guinean",
        "Guyanese",
        "Haitian",
        "Honduran",
        "Hungarian",
        "Icelandic",
        "Indian",
        "Indonesian",
        "Iranian",
        "Iraqi",
        "Irish",
        "Israeli",
        "Italian",
        "Ivorian",
        "Jamaican",
        "Japanese",
        "Jordanian",
        "Kazakh",
        "Kenyan",
        "Kiribati",
        "Kuwaiti",
        "Kyrgyz",
        "Lao",
        "Latvian",
        "Lebanese",
        "Liberian",
        "Libyan",
        "Liechtenstein",
        "Lithuanian",
        "Luxembourgish",
        "Malagasy",
        "Malawian",
        "Malaysian",
        "Maldivian",
        "Malian",
        "Maltese",
        "Marshallese",
        "Mauritanian",
        "Mauritian",
        "Mexican",
        "Micronesian",
        "Moldovan",
        "Monacan",
        "Mongolian",
        "Montenegrin",
        "Moroccan",
        "Mozambican",
        "Namibian",
        "Nauruan",
        "Nepalese",
        "New Zealander",
        "Nicaraguan",
        "Nigerian",
        "Nigerien",
        "North Korean",
        "Norwegian",
        "Omani",
        "Pakistani",
        "Palauan",
        "Palestinian",
        "Panamanian",
        "Papua New Guinean",
        "Paraguayan",
        "Peruvian",
        "Philippine",
        "Polish",
        "Portuguese",
        "Qatari",
        "Romanian",
        "Russian",
        "Rwandan",
        "Saint Lucian",
        "Salvadoran",
        "Samoan",
        "San Marinese",
        "Sao Tomean",
        "Saudi",
        "Senegalese",
        "Serbian",
        "Seychellois",
        "Sierra Leonean",
        "Singaporean",
        "Slovak",
        "Slovenian",
        "Solomon Islander",
        "Somali",
        "South African",
        "South Korean",
        "Spanish",
        "Sri Lankan",
        "Sudanese",
        "Surinamese",
        "Swazi",
        "Swedish",
        "Swiss",
        "Syrian",
        "Taiwanese",
        "Tajik",
        "Tanzanian",
        "Thai",
        "Togolese",
        "Tongan",
        "Trinidadian",
        "Tunisian",
        "Turkish",
        "Turkmen",
        "Tuvaluan",
        "Ugandan",
        "Ukrainian",
        "Uruguayan",
        "Uzbek",
        "Vanuatuan",
        "Venezuelan",
        "Vietnamese",
        "Yemeni",
        "Zambian",
        "Zimbabwean",
      ],
    },
    handicap: { type: Boolean },
    handicap_Percentage: { type: Number },
    aadhar_no: { type: Number },
    pan_card_no: { type: Number },
    total_family_Member: { type: Number },
    family_income: { type: Number },
    address: { type: String },
    admission_Status: {
      type: String,
      enum: ["fulfilled", "pending", "rejected", "not_Applied"],
    },
    wallet_Balance: { type: Number },
    profile_image: { type: String },
    student_Signature: { type: String },
    course: { type: String },
    role: {
      type: String,
      default: "student",
    },
  },
  { timestamps: true }
);
student_Schema.methods.hashPassword = function (password) {
  return hashPassword.call(this, password);
};

student_Schema.methods.comparePassword = function (password) {
  return comparePassword.call(this, password);
};

student_Schema.methods.generateAccessToken = function () {
  return generateAccessToken.call(this);
};

student_Schema.methods.generateRefreshToken = function () {
  return generateRefreshToken.call(this);
};

const Student = mongoose.model("Student", student_Schema);
module.exports = Student;
